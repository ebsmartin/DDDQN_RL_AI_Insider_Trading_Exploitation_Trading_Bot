import org.apache.storm.Config;
import org.apache.storm.StormSubmitter;
import org.apache.storm.topology.TopologyBuilder;
import org.apache.storm.tuple.Fields;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.List;
import java.nio.file.Path;


public class SECFinanceTopology {

    public static void main(String[] args) throws Exception {

        Path inputPath = Paths.get("/s/chopin/l/grad/ebmartin/cs535/Term_Project/DDDQN_RL_AI_Insider_Trading_Exploitation_Trading_Bot/DDDQ_RL_Trading_Bot/Datasets/toy_dataset.csv");
        System.out.println(inputPath.toString());

        // Read SEC data row by row from the CSV file
        List<String> SECData = new ArrayList<>();
        Files.lines(inputPath).forEach(SECData::add);

        // Split the zip codes into two parts so that each spout gets half of the zip codes
        List<String> SECData_part_1 = new ArrayList<>(SECData.subList(0, SECData.size()/2));
        List<String> SECData_part_2 = new ArrayList<>(SECData.subList(SECData.size()/2, SECData.size()));

        // Setup topology
        TopologyBuilder builder = new TopologyBuilder();
        // Set up the spouts
        builder.setSpout("SECDataSpout_1", new SECDataSpout(SECData_part_1, "sec_data"));
        builder.setSpout("SECDataSpout_2", new SECDataSpout(SECData_part_2, "sec_data"));

        // Set up the bolts
        // these bolts will be responsible for performing feature engineering on the financial data and emitting the data
        builder.setBolt("feature-engineering-bolt_1", new FeatureEngineeringBolt()).shuffleGrouping("SECDataSpout_1");
        builder.setBolt("feature-engineering-bolt_2", new FeatureEngineeringBolt()).shuffleGrouping("SECDataSpout_2");

        // these bolts will be responsible for counting the cloud coverage data with lossy counting
        builder.setBolt("cloud-lossy-count-bolt_1", new CloudLossyCountBolt()).shuffleGrouping("cloud-coverage-bolt_1");
        builder.setBolt("cloud-lossy-count-bolt_2", new CloudLossyCountBolt()).shuffleGrouping("cloud-coverage-bolt_2");

        // these bolts will be responsible for reporting the cloud coverage data
        // these bolts will be responsible for reporting the cloud coverage data
        builder.setBolt("cloud-report-bolt_1", new CloudReportBolt()).fieldsGrouping("cloud-lossy-count-bolt_1", 
                                                                new Fields("cloudCoverageLevel", "state", "frequency"));
        builder.setBolt("cloud-report-bolt_2", new CloudReportBolt()).fieldsGrouping("cloud-lossy-count-bolt_2", 
                                                                new Fields("cloudCoverageLevel", "state", "frequency"));
        

        Config conf = new Config();
        conf.setDebug(true);

        conf.setNumWorkers(5);
        StormSubmitter.submitTopology(args[0], conf, builder.createTopology());

    }
}
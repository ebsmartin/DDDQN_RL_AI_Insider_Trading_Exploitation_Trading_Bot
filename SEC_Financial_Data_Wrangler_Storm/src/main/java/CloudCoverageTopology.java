import org.apache.storm.Config;
import org.apache.storm.LocalCluster;
import org.apache.storm.StormSubmitter;
import org.apache.storm.topology.ConfigurableTopology;
import org.apache.storm.topology.TopologyBuilder;
import org.apache.storm.tuple.Fields;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.List;
import java.nio.file.Path;


public class CloudCoverageTopology {

    public static void main(String[] args) throws Exception {

        Path inputPath = Paths.get("uszips_toy.csv");
        System.out.println(inputPath.toString());

        // Read zip codes from the CSV file
        List<String> zipCodes = new ArrayList<>();
        Files.lines(inputPath).skip(1).forEach(line -> {
            String[] parts = line.split(",");
            zipCodes.add(parts[0]);
        });

        // Split the zip codes into two parts so that each spout gets half of the zip codes
        List<String> zipCodes_part_1 = new ArrayList<>(zipCodes.subList(0, zipCodes.size()/2));
        List<String> zipCodes_part_2 = new ArrayList<>(zipCodes.subList(zipCodes.size()/2, zipCodes.size()));

        // Setup topology
        TopologyBuilder builder = new TopologyBuilder();
        // Set up the spouts
        builder.setSpout("weatherAPI-spout_1", new SECDataSpout(zipCodes_part_1, "cloud_coverage"));
        builder.setSpout("weatherAPI-spout_2", new SECDataSpout(zipCodes_part_2, "cloud_coverage"));

        // Set up the bolts
        // these bolts will be responsible for emitting the cloud coverage data
        builder.setBolt("cloud-coverage-bolt_1", new CloudCoverageBolt()).shuffleGrouping("weatherAPI-spout_1");
        builder.setBolt("cloud-coverage-bolt_2", new CloudCoverageBolt()).shuffleGrouping("weatherAPI-spout_2");

        // these bolts will be responsible for counting the cloud coverage data with lossy counting
        builder.setBolt("cloud-lossy-count-bolt_1", new CloudLossyCountBolt()).shuffleGrouping("cloud-coverage-bolt_1");
        builder.setBolt("cloud-lossy-count-bolt_2", new CloudLossyCountBolt()).shuffleGrouping("cloud-coverage-bolt_2");

        // these bolts will be responsible for reporting the cloud coverage data
        // these bolts will be responsible for reporting the cloud coverage data
        builder.setBolt("cloud-report-bolt_1", new CloudReportBolt()).fieldsGrouping("cloud-lossy-count-bolt_1", 
                                                                new Fields("cloudCoverageLevel", "state", "frequency"));
        builder.setBolt("cloud-report-bolt_2", new CloudReportBolt()).fieldsGrouping("cloud-lossy-count-bolt_2", 
                                                                new Fields("cloudCoverageLevel", "state", "frequency"));
        

        Config conf = new Config();
        conf.setDebug(true);

        conf.setNumWorkers(5);
        StormSubmitter.submitTopology(args[0], conf, builder.createTopology());

    }
}
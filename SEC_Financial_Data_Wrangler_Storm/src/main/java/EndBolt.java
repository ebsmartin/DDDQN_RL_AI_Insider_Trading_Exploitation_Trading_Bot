import org.apache.storm.task.OutputCollector;
import org.apache.storm.task.TopologyContext;
import org.apache.storm.topology.OutputFieldsDeclarer;
import org.apache.storm.topology.base.BaseRichBolt;
import org.apache.storm.tuple.Tuple;

import java.util.Map;

import org.apache.storm.tuple.Fields;
import org.apache.storm.tuple.Values;


public class EndBolt extends BaseRichBolt {
    private OutputCollector collector;

    @Override
    public void prepare(Map conf, TopologyContext context, OutputCollector collector) {
        this.collector = collector;
    }

    @Override
    public void execute(Tuple tuple) {
        String Header_n_SEC_data = tuple.getStringByField("Header_n_SEC_data");
        String financial_data = tuple.getStringByField("financial_data");

        // Check for the "END" tuple
        if ("END".equals(Header_n_SEC_data) && "END".equals(financial_data)) {
            // Emit a special "END" tuple
            this.collector.emit(new Values("END", "END"));
        }
    }

    @Override
    public void declareOutputFields(OutputFieldsDeclarer declarer) {
        declarer.declare(new Fields("Header_n_SEC_data", "financial_data"));
    }
}